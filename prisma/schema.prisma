// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Session {
  id        String   @id
  sid       String   @unique @default(uuid())
  data      String
  expiresAt DateTime
}

model User {
  id       String   @id @default(uuid())
  username String   @unique
  password String
  userbucket Bucket? @relation(fields: [userbucketid], references: [id])
  userbucketid Int? @unique
  file File[]
}
model Bucket{
  id Int @id @default(autoincrement())
  name String @default("")
  ownedBy User?
  folders Folder[]
  files File[]
}
model Folder {
  id      Int @id @default(autoincrement())
  name    String @default("untitled")
  files   File[]
  parent Bucket  @relation(fields: [parentid], references: [id])
  parentid Int
}
model File{
  id Int @id @default(autoincrement())
  name String @default("New File")
  url String
  format String @default("File")
  createdAt DateTime @default(now())
  ownedBy User @relation(fields: [ownedByid], references: [id])
  ownedByid String
  Bucket Bucket @relation(fields: [Bucketid], references: [id])
  Bucketid Int
  Folder Folder? @relation(fields: [Folderid], references: [id])
  Folderid Int?
}
